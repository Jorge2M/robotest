<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.mng</groupId>
    <artifactId>robotest</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>test80</artifactId>
  <packaging>jar</packaging>
  <dependencies>
    	<dependency>
		    <groupId>org.aspectj</groupId>
		    <artifactId>aspectjrt</artifactId>
		    <version>1.8.2</version>
		</dependency>
	    <dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-chrome-driver</artifactId>
	        <version>3.14.0</version>
	    </dependency>
	    <dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-firefox-driver</artifactId>
	        <version>3.14.0</version>
	    </dependency>
		<dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>selenium-java</artifactId>
		    <version>3.14.0</version>
		</dependency>	    
		<dependency>  
 			<groupId>org.testng</groupId>  
 			<artifactId>testng</artifactId>  
 			<version>6.10</version>  
		</dependency>
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>1.7.1</version>
		</dependency>
	    <dependency>
	        <groupId>net.lightbody.bmp</groupId>
	        <artifactId>browsermob-core</artifactId>
	        <version>2.1.5</version>
	    </dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.10.0</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>3.16</version>
		</dependency>
		<dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-api-mockito</artifactId>
		    <version>1.7.3</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-module-junit4</artifactId>
		    <version>1.7.3</version>
		    <scope>test</scope>
		</dependency>
		<!-- 
        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>5.0.4</version>
        </dependency>
        -->			
        <!-- 
		<dependency>
			<groupId>org.eclipse.core</groupId>
			<artifactId>org.eclipse.core.runtime</artifactId>
			<version>3.7.0</version>
		</dependency>
		-->
		<dependency>
		    <groupId>org.eclipse.jdt</groupId>
		    <artifactId>org.eclipse.jdt.annotation</artifactId>
		    <version>2.0.0</version>
		</dependency>		
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>
        <dependency> <!-- Necesario para Selenium 2.46 -->
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>1.3</version>
        </dependency>
		<dependency>
   			<groupId>org.apache.commons</groupId>
   			<artifactId>commons-email</artifactId>
   			<version>1.3</version>
		</dependency>
		<dependency>
		    <groupId>commons-cli</groupId>
		    <artifactId>commons-cli</artifactId>
		    <version>1.4</version>
		</dependency>		
		<dependency>
  			<groupId>commons-io</groupId>
  			<artifactId>commons-io</artifactId>
  			<version>2.5</version>
		</dependency>
           <dependency>
              <groupId>commons-lang</groupId>
              <artifactId>commons-lang</artifactId>
              <version>2.6</version>
           </dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.20.1</version>
		</dependency>	
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>1.2.1</version>
		</dependency>
		-->
		<dependency>
		    <groupId>com.googlecode.json-simple</groupId>
		    <artifactId>json-simple</artifactId>
		    <version>1.1.1</version>
		</dependency>
		<!-- 
		<dependency>
		    <groupId>DeathByCaptcha</groupId>
		    <artifactId>DeathByCaptcha</artifactId>
		    <version>4.2</version>
		</dependency>
		-->			
  </dependencies>
    
       
  <build>
  	<plugins>
		<plugin>
			<!-- Define Aspectj Nature in Eclipse-->
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-eclipse-plugin</artifactId>
		    <configuration>
		      <additionalProjectnatures>
		        <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature>
		      </additionalProjectnatures>
		      <additionalBuildcommands>
		        <buildcommand>org.eclipse.ajdt.core.ajbuilder</buildcommand>
		      </additionalBuildcommands>
		    </configuration>
		</plugin>  	
       	<plugin>
			<groupId>org.codehaus.mojo</groupId>
		    <artifactId>aspectj-maven-plugin</artifactId>
		    <version>1.7</version>
		    <configuration>
		        <complianceLevel>1.8</complianceLevel>
		        <source>1.8</source>
		        <target>1.8</target>
		        <showWeaveInfo>true</showWeaveInfo>
		        <verbose>true</verbose>
		        <Xlint>ignore</Xlint>
		        <encoding>UTF-8 </encoding>
		    </configuration>
		    <executions>
		    	<!-- Problema Eclipse Kepler Version -->
		        <execution>
		            <goals>
		                <!-- use this goal to weave all your main classes -->
		                <goal>compile</goal>
		                <!-- use this goal to weave all your test classes -->
		                <!-- <goal>test-compile</goal> -->
		            </goals>
		        </execution>
		    </executions>
		</plugin> 	
 
        <plugin>
        	<groupId>org.apache.maven.plugins</groupId>
        	<artifactId>maven-surefire-plugin</artifactId>
        	<version>2.19</version>
        	<configuration>
          		<parallel>methods</parallel>
          		<threadCount>3</threadCount>
          		<properties>
          			<property>
              			<name>usedefaultlisteners</name>
              			<value>false</value>
            		</property>
            	</properties>
        	</configuration>
      	</plugin>      	
  	  	
		<plugin>
		    <!-- Configuración extraída de: http://emystein.blogspot.com.es/2010/12/empaquetar-una-aplicacion-de-consola.html -->
            <!-- Configuramos el plugin de JAR en el POM para que agregue el directorio src/main/config al classpath definido en el Manifest de la aplicación -->	
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<configuration>
				<!-- esto hace que al crear el jar se nombre test80.jar en vez de test80-1.0.0.jar si la versión del artifact es 1.0.0 -->
				<finalName>${project.artifactId}</finalName>
				<archive>
					<manifest>
						<!-- agregar todos los .jar de las dependencias en el classpath del Manifest -->
						<addClasspath>true</addClasspath>
						<!-- vamos a agregar antes del nombre de cada .jar en el classpath del Manifest el prefijo lib/ -->
						<!-- porque luego al construir el assembly copiaremos los .jar de las dependencias al directorio lib/-->
						<classpathPrefix>lib/</classpathPrefix>
						<!-- la clase que se ejecuta cuando se ejecute "java -jar test80.jar" -->
						<mainClass>org.test80.Test80mng</mainClass>
					</manifest>
					<manifestEntries>
						<!-- además de los nombres de las dependencias, agregar el directorio config al classpath del Manifest -->
						<Class-Path>config/</Class-Path>>
					</manifestEntries>
				</archive>
			</configuration>
		</plugin>
		
		<!-- Configuramos el plugin de Assembly para usar un descriptor llamado distribution.xml que el plugin tomará del directorio src/main/assembly -->	
		<plugin>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>3.0.0</version>
			<configuration>
			 	<appendAssemblyId>false</appendAssemblyId>
				<descriptors>
					<!-- el descriptor contiene la información para armar el assembly -->
					<descriptor>src/main/assembly/distribution.xml</descriptor>
				</descriptors>
			</configuration>
			<executions>
				<!-- ejecutar el goal 'single' del plugin de assembly al ejecutar mvn package -->
				<execution>
					<id>make-assembly</id>
					<phase>package</phase>
					<goals>
						<goal>single</goal>
					</goals>
				</execution>
			</executions>    
		</plugin>		
		
	</plugins>
	
	<!-- </pluginManagement>-->
	<pluginManagement>
		<plugins>
			<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.codehaus.mojo</groupId>
									<artifactId>
										aspectj-maven-plugin
									</artifactId>
									<versionRange>[1.7,)</versionRange>
									<goals>
										<goal>compile</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore></ignore>
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
		</plugins>
	</pluginManagement>  
  </build>
</project>
