<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion> 
	<artifactId>robotest</artifactId>
	<groupId>com.mng</groupId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<properties>
	    <maven.compiler.release>17</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!--suppress UnresolvedMavenProperty -->
		<skipUnitTests>${skipTests}</skipUnitTests>
        <nexus.url>https://nexus.sys.mango/nexus</nexus.url>
        
        <sonar.host.url>https://sonarqube.pro-k8s-tools.sys.mango</sonar.host.url>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPaths>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.language>java</sonar.language>
	</properties>


	<distributionManagement>
        <repository>
            <id>nexus</id>
            <name>releases</name>
            <url>${nexus.url}/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>snapshots</name>
            <url>${nexus.url}/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
  
	<dependencies>
		<dependency>
			<groupId>com.github.jorge2m</groupId>
			<artifactId>testmaker-core</artifactId>
			<version>2.1.32</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.25.1</version>
		</dependency>
		<dependency>
    		<groupId>com.sun.xml.bind</groupId>
    		<artifactId>jaxb-impl</artifactId>
    		<version>2.3.1</version>
		</dependency>
		<dependency>
    		<groupId>com.sun.xml.bind</groupId>
    		<artifactId>jaxb-core</artifactId>
    		<version>3.0.2</version>
		</dependency>
		<!--<dependency>
			<groupId>com.mango</groupId>
			<artifactId>aws.secrets.client</artifactId>
			<version>master-20190308-092928-9dd2c6c-2</version>
		</dependency>-->
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.5.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
		<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.9.1</version>
			<scope>runtime</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjtools -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>1.9.1</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>  
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>		
		 	
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.14.0</version>
				<configuration>
					<complianceLevel>16</complianceLevel>
					<source>16</source>
					<target>16</target>
					<showWeaveInfo>false</showWeaveInfo>
					<verbose>true</verbose>
					<Xlint>ignore</Xlint>
					<encoding>UTF-8</encoding>
					<weaveDependencies>
						<weaveDependency>
							<groupId>com.github.jorge2m</groupId>
							<artifactId>testmaker-core</artifactId>
						</weaveDependency>
					</weaveDependencies>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			 
			<plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.9.1.2184</version>
            </plugin>
            
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>            

			<plugin>
				<!-- Configuración extraída de: http://emystein.blogspot.com.es/2010/12/empaquetar-una-aplicacion-de-consola.html -->
				<!-- Configuramos el plugin de JAR en el POM para que agregue el directorio src/main/config al classpath definido en el Manifest de la aplicación -->	
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- esto hace que al crear el jar se nombre robotest.jar en vez de robotest-1.0.0.jar si la versión del artifact es 1.0.0 -->
					<finalName>${project.artifactId}</finalName>
					<archive>
						<manifest>
							<!-- agregar todos los .jar de las dependencias en el classpath del Manifest -->
							<addClasspath>true</addClasspath>
							<!-- vamos a agregar antes del nombre de cada .jar en el classpath del Manifest el prefijo lib/ -->
							<!-- porque luego al construir el assembly copiaremos los .jar de las dependencias al directorio lib/-->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- la clase que se ejecuta cuando se ejecute "java -jar robotest.jar" -->
							<mainClass>com.mng.robotest.access.CmdRunTests</mainClass>
						</manifest>
						<manifestEntries>
							<!-- además de los nombres de las dependencias, agregar el directorio config al classpath del Manifest -->
							<Class-Path>config/</Class-Path>>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			
			<!-- Configuramos el plugin de Assembly para usar un descriptor llamado distribution.xml que el plugin tomará del directorio src/main/assembly -->	
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<finalName>${project.artifactId}</finalName>
			 		<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<!-- el descriptor contiene la información para armar el assembly -->
						<descriptor>src/main/assembly/distribution.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<!-- ejecutar el goal 'single' del plugin de assembly al ejecutar mvn package -->
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>    
			</plugin>	

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<skipTests>${skipUnitTests}</skipTests>
					<argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>3.0.0-M5</version>
					</dependency>
				</dependencies>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
        			<argLine>-Dfile.encoding=UTF-8</argLine>
        			<includes>
            			<include>**/*IT.java</include>
          			</includes>
    			</configuration>
			    <executions>
			        <execution>
			            <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			            </goals>
			        </execution>
			    </executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>3.0.0-M5</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.14.0,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
